#!/bin/bash
###############################################################################################################
#                                            BatchArtemisSRAMiner                                             #
#                                                JCO Mifsud                                                   #
#                                                   2023                                                      #
###############################################################################################################

# Underlying pbs script that is run using the wrapper script YOURPROJECT_blastnt.sh
# This script will run blastn on the contigs.fa file from the assembled contigs
# It will then extract the contigs that have a blast hit to the nr database

# I tend to run this once per project on a single file containing all the contigs concatenated together resulting from the Rdrp and RVDB blasts (i.e. the blastcontig.fa files in blast_results/)

#PBS -N blastn_blastxNT_array
#PBS -M jmif9945@uni.sydney.edu.au
#PBS -m abe

##load modules
module load blast+

function concatenateBlastContigs {
    if [[ -z "$file_of_accessions" ]]; then
        rdrp_blastcontigs_file=("$wd"/*_rdrp_blastcontigs.fasta)
        rvdb_blastcontigs_file=("$wd"/*_RVDB_blastcontigs.fasta)
    else
        accession_ids=$(cat "$file_of_accessions")
        rdrp_blastcontigs_file=()
        rvdb_blastcontigs_file=()
        missing_files=()

        # Iterate over each accession ID and find corresponding files
        for id in $accession_ids; do
            rdrp_blastcontigs="$wd"/"${id}"_rdrp_blastcontigs.fasta
            rvdb_blastcontigs="$wd"/"${id}"_RVDB_blastcontigs.fasta

            # Check if the RdRp blastcontigs file exists
            if [ -f "$rdrp_blastcontigs" ]; then
                rdrp_blastcontigs_file+=("$rdrp_blastcontigs")
            else
                missing_files+=("RdRp blastcontigs file missing for accession ID: $id")
            fi

            # Check if the RVDB blastcontigs file exists
            if [ -f "$rvdb_blastcontigs" ]; then
                rvdb_blastcontigs_file+=("$rvdb_blastcontigs")
            else
                missing_files+=("RVDB blastcontigs file missing for accession ID: $id")
            fi
        done

        # Print missing files if any
        if [ ${#missing_files[@]} -gt 0 ]; then
            echo "${missing_files[@]}"
        fi

        cat "${rdrp_blastcontigs_file[@]}" >"$wd"/"$file_of_accessions_name"_combined_rdrp_blastcontigs_forNT.fasta # Concatenate all RdRp blast contig files into one file
        cat "${rvdb_blastcontigs_file[@]}" >"$wd"/"$file_of_accessions_name"_combined_RVDB_blastcontigs_forNT.fasta # Concatenate all RVDB blast contig files into one file
        cat "$wd"/"$file_of_accessions_name"_combined_rdrp_blastcontigs_forNT.fasta "$wd"/"$file_of_accessions_name"_combined_RVDB_blastcontigs_forNT.fasta >"$inpath"/"$file_of_accessions_name"_blastcontigs_forNT.fasta 
        rm "$wd"/"$file_of_accessions_name"_combined_rdrp_blastcontigs_forNT.fasta "$wd"/"$file_of_accessions_name"_combined_RVDB_blastcontigs_forNT.fasta
    fi
}

function Blastn {
    blastn -query "$inpath"/"$file_of_accessions_name"_blastcontigs_forNT.fasta -db "$db" -out "$outpath"/"$file_of_accessions_name"_nt_blastn_results.txt -max_target_seqs 10 -num_threads 22 -mt_mode 1 -evalue 1E-10 -subject_besthit -outfmt '6 qseqid qlen sacc salltitles staxids pident length evalue'
}

#tool to extract contigs from assembly Blast to fasta
function blastToFasta {
    grep -i ".*" "$outpath"/"$file_of_accessions_name"_nt_blastn_results.txt | cut -f1 | uniq >"$outpath"/"$file_of_accessions_name""_temp_contig_names.txt" #by defult this will grab the contig name from every blast result line as I commonly use a custom protein database containing only viruses
    grep -A1 -I -Ff "$outpath"/"$file_of_accessions_name""_temp_contig_names.txt" "$inpath"/"$file_of_accessions_name".contigs.fa >"$outpath"/"$file_of_accessions_name"_nt_blastcontigs.fasta
    sed -i 's/--//' "$outpath"/"$file_of_accessions_name"_nt_blastcontigs.fasta                            # remove -- from the contigs
    sed -i '/^[[:space:]]*$/d' "$outpath"/"$file_of_accessions_name"_nt_blastcontigs.fasta                 # remove the white space
    sed --posix -i "/^\>/ s/$/"_$file_of_accessions_name"/" "$outpath"/"$file_of_accessions_name"_nt_blastcontigs.fasta # annotate the contigs
    rm "$outpath"/"$file_of_accessions_name""_temp_contig_names.txt"
    rm "$inpath"/"$file_of_accessions_name"_blastcontigs_forNT.fasta 
}

file_of_accessions_name=$(basename -- "$file_of_accessions")

wd=/project/"$root_project"/"$project"/blast_results
inpath=/project/"$root_project"/"$project"/contigs/final_contigs # location of reads and filenames
outpath=/project/"$root_project"/"$project"/blast_results        # location of megahit output

# cd working dir
cd "$wd" || exit

concatenateBlastContigs
Blastn
blastToFasta
